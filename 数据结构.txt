数据结构
时间复杂度 额外空间复杂度
最优解：满足额外空间复杂度最小的情况下 时间复杂度最小

1.冒泡排序
	大数沉底：
	数列n个数中第一个数的后面数如果比该数值小就前后交换位置，指针后移动
	一次确定将该数列最大值放在最右侧
	下一次扣除最后一个数 将前n-1个数的数列重复大数沉底

2.插入排序
	从第2个数起，与前面的数做对比，如果前者大于后者则互换位置
  	从第3个数起，与前面的数做对比，如果前者大于后者则互换位置，指针前移

3.归并排序
	数组一分为二，左右各自排序，生成额外数组空间help，左右两组数组指针一起比较，从左到右谁小谁写入help数组，
	如左右之一发生越界，则将另一边剩下的数按顺序填入help中 ，排完左右两组所有数后，将help拷贝给原数组。

4.求小和问题 
	问题：一个数组，求出每个数左边比该数小的数的累加和
	如：1，10，3，0，8
	10左边1<10 sum1=1
	3左边1<3	sum2=1
	8左边1<8,3<8,0>8 sum3=1+3+0
	最终sum=sum1+sum2+sum3 = 6

	解决：利用归并排序法，附加上：左边每个数与右边每个数对比，出现左边小于右边，sum=左边数值×右边数组大于左边数值的个数
	如：左：1，2，6	右：5，9
	左1比右5，9小 则sum=1×2=2
	左2比右5，9小 则sum=2+2×2	= 6
	左6比右9小      则sum=6+6×1 = 12

5.划分问题
	荷兰国旗问题：给定一个整数数组，给定一个值K，这个值在原数组中一定存在，要求把数组中小于K的元素放到数组的左边，
	大于K的元素放到数组的右边，等于K的元素放到数组的中间，最终返回一个整数数组，其中只有两个值，分别是等于K的数
	组部分的左右两个下标值。
  解决：partition

6.快速排序：
	利用荷兰国旗方法partition进行左右两边分别递归parititon，左部分的右边界为less，右部分的左边界为more；

7.斐波那契数列
	马老师的3种方法----在flume第一天	递归/hashmap/迭代

